name: Webpack Redis Plugin

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [created, published]

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm run lint
      - run: npm run test
      - run: npm run coverage

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    strategy:
      matrix:
        webpack: [2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm install
      - run: npm run build
      - run: npm --prefix tests/webpack${{ matrix.webpack }} install
      - run: npm --prefix tests/webpack${{ matrix.webpack }} run build
      - run: >-
          docker exec ${{ job.services.redis.id }} redis-cli --raw get webpack-redis-plugin
          | diff --brief --ignore-space-change - tests/webpack${{ matrix.webpack }}/dist/main.js

  publish:
    name: Publish
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    needs: [tests, integration]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
